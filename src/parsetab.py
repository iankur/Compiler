
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = '9B29144AC9483A3BA6ED60EA832EC3AA'
    
_lr_action_items = {'RIGHT_OP':([76,77,91,93,94,97,99,100,101,102,122,134,163,166,177,187,189,196,265,266,267,268,269,272,273,275,276,279,280,281,285,286,287,315,316,318,320,],[-4,-29,-31,-38,-7,184,-3,-5,-17,-35,-29,-3,-19,-21,-20,-14,-13,-18,-6,184,184,184,184,-36,-37,-39,-40,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'DO':([50,57,59,107,114,115,116,119,120,123,124,127,133,135,137,138,142,204,205,206,221,222,223,224,226,230,231,290,291,292,296,298,300,324,325,326,328,337,339,340,342,343,344,346,347,348,349,],[-77,-188,137,-78,-189,-177,-179,-175,137,-176,-192,137,-190,-180,137,-178,-184,137,-186,-204,-202,-191,-185,-193,137,137,-203,-201,-187,-205,-183,137,-181,137,-182,137,137,137,-197,-196,-194,-199,137,137,-200,-198,-195,]),'SHORT':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,61,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[2,2,-96,-130,-103,-94,-95,-91,-90,-105,-1,2,-93,-102,-98,-134,2,-89,-92,-133,-207,-99,-206,-97,-100,2,-101,-104,-131,2,-132,-2,-125,2,-77,2,-211,-188,2,2,-108,2,-135,-140,2,-137,-78,-209,2,-210,-189,2,2,-184,2,2,2,-111,2,-123,-138,2,-139,2,2,-136,-208,-186,-185,2,-112,-107,-124,2,2,-187,-106,-113,]),'CONST':([0,1,2,3,4,5,6,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,39,40,42,45,46,48,50,53,55,57,58,59,60,61,62,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[3,3,-96,-130,-103,-94,3,-95,-91,-90,-105,-1,3,-93,-102,-98,-134,3,-89,-92,-133,-207,-99,-206,-97,-100,3,-101,-104,-131,3,3,-145,-132,-2,-125,3,-77,3,-211,-188,3,3,-108,3,-146,-135,-140,3,-137,-78,-209,3,-210,-189,3,3,-184,3,3,3,-111,3,-123,-138,3,-139,3,3,-136,-208,-186,-185,3,-112,-107,-124,3,3,-187,-106,-113,]),'ADD_ASSIGN':([76,77,94,99,100,101,122,134,163,166,177,187,189,196,265,279,280,281,315,316,318,320,],[-4,-29,-7,-3,-5,-17,217,-3,-19,-21,-20,-14,-13,-18,-6,-11,-12,-9,-22,-30,-10,-8,]),'RIGHT_ASSIGN':([76,77,94,99,100,101,122,134,163,166,177,187,189,196,265,279,280,281,315,316,318,320,],[-4,-29,-7,-3,-5,-17,218,-3,-19,-21,-20,-14,-13,-18,-6,-11,-12,-9,-22,-30,-10,-8,]),'DEC_OP':([49,50,57,59,76,78,80,82,83,85,86,87,88,90,94,99,100,101,103,106,107,110,114,115,116,117,119,120,121,123,124,127,131,133,134,135,137,138,142,152,158,164,165,167,168,169,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,191,192,193,194,195,201,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,241,250,261,265,279,280,281,290,291,292,294,296,298,300,304,317,318,319,320,322,323,324,325,326,327,328,337,339,340,342,343,344,346,347,348,349,],[78,-77,-188,78,-4,78,78,-28,-23,78,-25,-24,-26,78,-7,-3,-5,187,78,-27,-78,78,-189,-177,-179,78,-175,78,78,-176,-192,78,78,-190,-3,-180,78,-178,-184,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-14,-13,78,78,78,78,78,78,78,-186,-204,-68,-66,-72,-73,-71,-64,-65,-69,-63,-67,-70,78,78,-202,-191,-185,-193,78,78,78,78,78,-203,78,78,78,78,-6,-11,-12,-9,-201,-187,-205,78,-183,78,-181,78,78,-10,78,-8,78,78,78,-182,78,78,78,78,-197,-196,-194,-199,78,78,-200,-198,-195,]),'^':([76,77,79,81,89,91,93,94,97,98,99,100,101,102,122,134,163,166,177,187,189,196,257,259,260,265,266,267,268,269,272,273,275,276,277,278,279,280,281,285,286,287,315,316,318,320,],[-4,-29,165,-51,-46,-31,-38,-7,-41,-49,-3,-5,-17,-35,-29,-3,-19,-21,-20,-14,-13,-18,-52,-50,165,-6,-44,-42,-45,-43,-36,-37,-39,-40,-48,-47,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'VOID':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,61,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[5,5,-96,-130,-103,-94,-95,-91,-90,-105,-1,5,-93,-102,-98,-134,5,-89,-92,-133,-207,-99,-206,-97,-100,5,-101,-104,-131,5,-132,-2,-125,5,-77,5,-211,-188,5,5,-108,5,-135,-140,5,-137,-78,-209,5,-210,-189,5,5,-184,5,5,5,-111,5,-123,-138,5,-139,5,5,-136,-208,-186,-185,5,-112,-107,-124,5,5,-187,-106,-113,]),'DIV_ASSIGN':([76,77,94,99,100,101,122,134,163,166,177,187,189,196,265,279,280,281,315,316,318,320,],[-4,-29,-7,-3,-5,-17,214,-3,-19,-21,-20,-14,-13,-18,-6,-11,-12,-9,-22,-30,-10,-8,]),',':([1,2,3,4,5,6,7,8,9,10,13,15,16,17,19,21,23,24,27,30,31,32,33,34,35,38,39,40,41,42,43,46,51,52,53,54,60,62,63,64,66,67,68,69,70,72,73,74,75,76,77,79,81,84,89,91,92,93,94,95,96,97,98,99,100,101,102,105,112,122,128,134,139,141,149,151,153,155,156,157,159,160,163,166,172,177,187,189,196,197,198,199,200,207,236,239,240,242,243,244,245,246,252,253,254,256,257,259,260,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,293,295,297,299,302,303,305,308,309,310,312,314,315,316,318,320,321,329,330,331,332,333,334,335,336,338,341,],[-79,-96,-130,-103,-94,-141,-95,-91,-90,-105,-81,-93,-102,-98,-134,-89,-92,-133,-99,-97,-100,-83,-101,-104,-131,-80,-142,-145,-143,-132,-82,-125,108,-85,-87,-84,-108,-146,-144,-135,-126,150,-128,-140,-154,-149,-153,161,162,-4,-29,-53,-51,-55,-46,-31,-59,-38,-7,-57,-137,-41,-49,-3,-5,-17,-35,-76,-87,-29,225,-3,-74,-61,150,-123,-138,-152,-151,-159,-158,-139,-19,-21,225,-20,-14,-13,-18,-136,-86,-88,-170,225,-107,-118,-120,307,-124,-127,-129,-166,-162,-160,-155,-150,-52,-50,-54,-6,-44,-42,-45,-43,-58,225,-36,-37,-56,-39,-40,-48,-47,-11,-12,-9,-15,319,225,-32,-34,-33,-173,322,-62,-75,225,225,225,-106,-121,-167,-161,-168,-164,-163,-22,-30,-10,-8,-171,-122,-119,-169,-165,-60,-16,-174,-172,225,225,]),'CHAR':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,61,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[7,7,-96,-130,-103,-94,-95,-91,-90,-105,-1,7,-93,-102,-98,-134,7,-89,-92,-133,-207,-99,-206,-97,-100,7,-101,-104,-131,7,-132,-2,-125,7,-77,7,-211,-188,7,7,-108,7,-135,-140,7,-137,-78,-209,7,-210,-189,7,7,-184,7,7,7,-111,7,-123,-138,7,-139,7,7,-136,-208,-186,-185,7,-112,-107,-124,7,7,-187,-106,-113,]),'WHILE':([50,57,59,107,114,115,116,119,120,123,124,127,133,135,137,138,142,204,205,206,221,222,223,224,226,230,231,232,290,291,292,296,298,300,324,325,326,328,337,339,340,342,343,344,346,347,348,349,],[-77,-188,130,-78,-189,-177,-179,-175,130,-176,-192,130,-190,-180,130,-178,-184,130,-186,-204,-202,-191,-185,-193,130,130,-203,301,-201,-187,-205,-183,130,-181,130,-182,130,130,130,-197,-196,-194,-199,130,130,-200,-198,-195,]),'STATIC':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,64,69,96,107,109,111,113,114,120,142,151,153,154,160,162,197,202,205,223,236,243,249,262,291,303,],[8,8,-96,-130,-103,-94,-95,-91,-90,-105,-1,8,-93,-102,-98,-134,8,-89,-92,-133,-207,-99,-206,-97,-100,8,-101,-104,-131,8,-132,-2,-125,8,-77,8,-211,-188,8,8,-108,-135,-140,-137,-78,-209,8,-210,-189,8,-184,-123,-138,8,-139,8,-136,-208,-186,-185,-107,-124,8,8,-187,-106,]),'OR_OP':([76,77,79,81,84,89,91,92,93,94,95,97,98,99,100,101,102,122,134,163,166,177,187,189,196,257,259,260,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,285,286,287,315,316,318,320,],[-4,-29,-53,-51,-55,-46,-31,178,-38,-7,-57,-41,-49,-3,-5,-17,-35,-29,-3,-19,-21,-20,-14,-13,-18,-52,-50,-54,-6,-44,-42,-45,-43,-58,-36,-37,-56,-39,-40,-48,-47,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'IF':([50,57,59,107,114,115,116,119,120,123,124,127,133,135,137,138,142,204,205,206,221,222,223,224,226,230,231,290,291,292,296,298,300,324,325,326,328,337,339,340,342,343,344,346,347,348,349,],[-77,-188,140,-78,-189,-177,-179,-175,140,-176,-192,140,-190,-180,140,-178,-184,140,-186,-204,-202,-191,-185,-193,140,140,-203,-201,-187,-205,-183,140,-181,140,-182,140,140,140,-197,-196,-194,-199,140,140,-200,-198,-195,]),'EXTERN':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,64,69,96,107,109,111,113,114,120,142,151,153,154,160,162,197,202,205,223,236,243,249,262,291,303,],[9,9,-96,-130,-103,-94,-95,-91,-90,-105,-1,9,-93,-102,-98,-134,9,-89,-92,-133,-207,-99,-206,-97,-100,9,-101,-104,-131,9,-132,-2,-125,9,-77,9,-211,-188,9,9,-108,-135,-140,-137,-78,-209,9,-210,-189,9,-184,-123,-138,9,-139,9,-136,-208,-186,-185,-107,-124,9,9,-187,-106,]),'CONSTANT':([49,50,57,59,78,80,82,83,85,86,87,88,90,103,106,107,110,114,115,116,117,119,120,121,123,124,127,131,133,135,137,138,142,152,158,164,165,167,168,169,173,174,175,176,178,179,180,181,182,183,184,185,186,191,192,193,194,195,201,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,241,250,261,290,291,292,294,296,298,300,304,317,319,322,323,324,325,326,327,328,337,339,340,342,343,344,346,347,348,349,],[76,-77,-188,76,76,76,-28,-23,76,-25,-24,-26,76,76,-27,-78,76,-189,-177,-179,76,-175,76,76,-176,-192,76,76,-190,-180,76,-178,-184,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-186,-204,-68,-66,-72,-73,-71,-64,-65,-69,-63,-67,-70,76,76,-202,-191,-185,-193,76,76,76,76,76,-203,76,76,76,76,-201,-187,-205,76,-183,76,-181,76,76,76,76,76,76,-182,76,76,76,76,-197,-196,-194,-199,76,76,-200,-198,-195,]),'SIZEOF':([49,50,57,59,78,80,82,83,85,86,87,88,90,103,106,107,110,114,115,116,117,119,120,121,123,124,127,131,133,135,137,138,142,152,158,164,165,167,168,169,173,174,175,176,178,179,180,181,182,183,184,185,186,191,192,193,194,195,201,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,241,250,261,290,291,292,294,296,298,300,304,317,319,322,323,324,325,326,327,328,337,339,340,342,343,344,346,347,348,349,],[80,-77,-188,80,80,80,-28,-23,80,-25,-24,-26,80,80,-27,-78,80,-189,-177,-179,80,-175,80,80,-176,-192,80,80,-190,-180,80,-178,-184,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-186,-204,-68,-66,-72,-73,-71,-64,-65,-69,-63,-67,-70,80,80,-202,-191,-185,-193,80,80,80,80,80,-203,80,80,80,80,-201,-187,-205,80,-183,80,-181,80,80,80,80,80,80,-182,80,80,80,80,-197,-196,-194,-199,80,80,-200,-198,-195,]),'/':([76,77,91,94,99,100,101,102,122,134,163,166,177,187,189,196,265,272,273,279,280,281,285,286,287,315,316,318,320,],[-4,-29,-31,-7,-3,-5,-17,195,-29,-3,-19,-21,-20,-14,-13,-18,-6,195,195,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'!':([49,50,57,59,78,80,82,83,85,86,87,88,90,103,106,107,110,114,115,116,117,119,120,121,123,124,127,131,133,135,137,138,142,152,158,164,165,167,168,169,173,174,175,176,178,179,180,181,182,183,184,185,186,191,192,193,194,195,201,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,241,250,261,290,291,292,294,296,298,300,304,317,319,322,323,324,325,326,327,328,337,339,340,342,343,344,346,347,348,349,],[82,-77,-188,82,82,82,-28,-23,82,-25,-24,-26,82,82,-27,-78,82,-189,-177,-179,82,-175,82,82,-176,-192,82,82,-190,-180,82,-178,-184,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-186,-204,-68,-66,-72,-73,-71,-64,-65,-69,-63,-67,-70,82,82,-202,-191,-185,-193,82,82,82,82,82,-203,82,82,82,82,-201,-187,-205,82,-183,82,-181,82,82,82,82,82,82,-182,82,82,82,82,-197,-196,-194,-199,82,82,-200,-198,-195,]),'%':([76,77,91,94,99,100,101,102,122,134,163,166,177,187,189,196,265,272,273,279,280,281,285,286,287,315,316,318,320,],[-4,-29,-31,-7,-3,-5,-17,194,-29,-3,-19,-21,-20,-14,-13,-18,-6,194,194,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'&':([49,50,57,59,76,77,78,80,81,82,83,85,86,87,88,89,90,91,93,94,97,98,99,100,101,102,103,106,107,110,114,115,116,117,119,120,121,122,123,124,127,131,133,134,135,137,138,142,152,158,163,164,165,166,167,168,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,191,192,193,194,195,196,201,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,241,250,257,259,261,265,266,267,268,269,272,273,275,276,277,278,279,280,281,285,286,287,290,291,292,294,296,298,300,304,315,316,317,318,319,320,322,323,324,325,326,327,328,337,339,340,342,343,344,346,347,348,349,],[83,-77,-188,83,-4,-29,83,83,168,-28,-23,83,-25,-24,-26,-46,83,-31,-38,-7,-41,-49,-3,-5,-17,-35,83,-27,-78,83,-189,-177,-179,83,-175,83,83,-29,-176,-192,83,83,-190,-3,-180,83,-178,-184,83,83,-19,83,83,-21,83,83,83,83,83,83,83,-20,83,83,83,83,83,83,83,83,83,-14,-13,83,83,83,83,83,-18,83,83,-186,-204,-68,-66,-72,-73,-71,-64,-65,-69,-63,-67,-70,83,83,-202,-191,-185,-193,83,83,83,83,83,-203,83,83,83,168,-50,83,-6,-44,-42,-45,-43,-36,-37,-39,-40,-48,-47,-11,-12,-9,-32,-34,-33,-201,-187,-205,83,-183,83,-181,83,-22,-30,83,-10,83,-8,83,83,83,-182,83,83,83,83,-197,-196,-194,-199,83,83,-200,-198,-195,]),')':([1,2,3,4,5,6,7,8,9,10,13,15,16,17,19,21,23,24,27,30,31,32,33,34,35,38,39,40,41,42,43,44,46,48,54,60,62,63,64,69,70,71,72,73,74,75,76,77,79,81,84,89,91,92,93,94,95,96,97,98,99,100,101,102,122,124,139,141,145,147,151,153,154,155,156,157,159,160,163,166,170,171,172,177,187,189,191,196,197,224,236,237,238,243,246,247,248,249,252,253,254,255,256,257,258,259,260,262,263,264,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,282,283,285,286,287,293,295,297,299,302,303,308,309,310,311,312,314,315,316,318,320,323,331,332,333,334,338,341,],[-79,-96,-130,-103,-94,-141,-95,-91,-90,-105,-81,-93,-102,-98,-134,-89,-92,-133,-99,-97,-100,-83,-101,-104,-131,-80,-142,-145,-143,-132,-82,64,-125,69,-84,-108,-146,-144,-135,-140,-154,153,-149,-153,160,-147,-4,-29,-53,-51,-55,-46,-31,-59,-38,-7,-57,-137,-41,-49,-3,-5,-17,-35,-29,-192,-74,-61,-115,-117,-123,-138,246,-152,-151,-159,-158,-139,-19,-21,261,-156,265,-20,-14,-13,281,-18,-136,-193,-107,-114,-116,-124,-166,308,309,310,-162,-160,-155,-148,-150,-52,315,-50,-54,246,-157,-158,-6,-44,-42,-45,-43,-58,-36,-37,-56,-39,-40,-48,-47,-11,-12,-9,-15,318,-32,-34,-33,-62,-75,324,326,328,-106,-167,-161,-168,331,-164,-163,-22,-30,-10,-8,337,-169,-165,-60,-16,344,345,]),'(':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,21,23,24,25,26,27,28,30,31,32,33,34,35,38,39,40,41,42,43,45,46,49,50,54,55,56,57,59,60,62,63,64,69,73,76,78,80,82,83,85,86,87,88,90,94,96,99,100,101,103,106,107,108,109,110,113,114,115,116,117,119,120,121,123,124,125,127,130,131,132,133,134,135,137,138,140,142,145,147,148,151,152,153,154,157,158,159,160,164,165,167,168,169,171,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,191,192,193,194,195,197,201,202,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,236,237,238,241,243,246,250,252,253,261,262,264,265,279,280,281,290,291,292,294,296,298,300,301,303,304,307,308,309,310,312,314,317,318,319,320,322,323,324,325,326,327,328,331,332,337,339,340,342,343,344,346,347,348,349,],[14,-79,-96,-130,-103,-94,-141,-95,-91,-90,-105,14,-1,-81,14,-93,-102,-98,-134,14,-89,-92,48,14,-207,-99,-206,-97,-100,-83,-101,-104,-131,-80,-142,-145,-143,48,-82,-2,-125,85,-77,-84,-211,14,-188,117,-108,-146,-144,-135,-140,154,-4,164,167,-28,-23,117,-25,-24,-26,85,-7,-137,-3,-5,191,164,-27,-78,14,-209,117,-210,-189,-177,-179,117,-175,117,117,-176,-192,220,117,227,85,229,-190,-3,-180,117,-178,233,-184,-115,-117,14,-123,85,-138,154,249,85,154,-139,117,85,117,85,85,262,85,85,85,85,85,117,85,85,85,85,85,85,85,-14,-13,117,117,85,85,85,-136,117,-208,117,-186,-204,-68,-66,-72,-73,-71,-64,-65,-69,-63,-67,-70,117,117,-202,-191,-185,-193,117,117,117,117,117,-203,117,-107,-114,-116,85,-124,-166,85,-162,249,85,262,262,-6,-11,-12,-9,-201,-187,-205,117,-183,117,-181,327,-106,85,14,-167,-161,-168,-164,-163,85,-10,117,-8,117,117,117,-182,117,117,117,-169,-165,117,-197,-196,-194,-199,117,117,-200,-198,-195,]),'+':([49,50,57,59,76,77,78,80,82,83,85,86,87,88,90,91,93,94,99,100,101,102,103,106,107,110,114,115,116,117,119,120,121,122,123,124,127,131,133,134,135,137,138,142,152,158,163,164,165,166,167,168,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,191,192,193,194,195,196,201,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,241,250,261,265,272,273,275,276,279,280,281,285,286,287,290,291,292,294,296,298,300,304,315,316,317,318,319,320,322,323,324,325,326,327,328,337,339,340,342,343,344,346,347,348,349,],[86,-77,-188,86,-4,-29,86,86,-28,-23,86,-25,-24,-26,86,-31,180,-7,-3,-5,-17,-35,86,-27,-78,86,-189,-177,-179,86,-175,86,86,-29,-176,-192,86,86,-190,-3,-180,86,-178,-184,86,86,-19,86,86,-21,86,86,86,86,86,86,86,-20,86,86,86,86,86,86,86,86,86,-14,-13,86,86,86,86,86,-18,86,86,-186,-204,-68,-66,-72,-73,-71,-64,-65,-69,-63,-67,-70,86,86,-202,-191,-185,-193,86,86,86,86,86,-203,86,86,86,86,-6,-36,-37,180,180,-11,-12,-9,-32,-34,-33,-201,-187,-205,86,-183,86,-181,86,-22,-30,86,-10,86,-8,86,86,86,-182,86,86,86,86,-197,-196,-194,-199,86,86,-200,-198,-195,]),'*':([0,1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,20,21,23,25,26,27,28,30,31,32,33,34,35,38,39,40,43,45,46,49,50,54,55,56,57,59,60,62,73,76,77,78,80,82,83,85,86,87,88,90,91,94,99,100,101,102,103,106,107,108,109,110,113,114,115,116,117,119,120,121,122,123,124,127,131,133,134,135,137,138,142,145,147,148,151,152,154,158,163,164,165,166,167,168,169,171,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,191,192,193,194,195,196,201,202,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,236,237,238,241,243,250,261,262,265,272,273,279,280,281,285,286,287,290,291,292,294,296,298,300,303,304,307,315,316,317,318,319,320,322,323,324,325,326,327,328,337,339,340,342,343,344,346,347,348,349,],[6,-79,-96,-130,-103,-94,6,-95,-91,-90,-105,-1,-81,6,-93,-102,-98,6,-89,-92,6,-207,-99,-206,-97,-100,-83,-101,-104,-131,-80,6,-145,-82,-2,-125,87,-77,-84,-211,6,-188,87,-108,-146,6,-4,-29,87,87,-28,-23,87,-25,-24,-26,87,-31,-7,-3,-5,-17,193,87,-27,-78,6,-209,87,-210,-189,-177,-179,87,-175,87,87,-29,-176,-192,87,87,-190,-3,-180,87,-178,-184,-115,-117,6,-123,87,6,87,-19,87,87,-21,87,87,87,6,87,87,87,87,-20,87,87,87,87,87,87,87,87,87,-14,-13,87,87,87,87,87,-18,87,-208,87,-186,-204,-68,-66,-72,-73,-71,-64,-65,-69,-63,-67,-70,87,87,-202,-191,-185,-193,87,87,87,87,87,-203,87,-107,-114,-116,87,-124,87,87,6,-6,193,193,-11,-12,-9,-32,-34,-33,-201,-187,-205,87,-183,87,-181,-106,87,6,-22,-30,87,-10,87,-8,87,87,87,-182,87,87,87,87,-197,-196,-194,-199,87,87,-200,-198,-195,]),'-':([49,50,57,59,76,77,78,80,82,83,85,86,87,88,90,91,93,94,99,100,101,102,103,106,107,110,114,115,116,117,119,120,121,122,123,124,127,131,133,134,135,137,138,142,152,158,163,164,165,166,167,168,169,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,191,192,193,194,195,196,201,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,241,250,261,265,272,273,275,276,279,280,281,285,286,287,290,291,292,294,296,298,300,304,315,316,317,318,319,320,322,323,324,325,326,327,328,337,339,340,342,343,344,346,347,348,349,],[88,-77,-188,88,-4,-29,88,88,-28,-23,88,-25,-24,-26,88,-31,181,-7,-3,-5,-17,-35,88,-27,-78,88,-189,-177,-179,88,-175,88,88,-29,-176,-192,88,88,-190,-3,-180,88,-178,-184,88,88,-19,88,88,-21,88,88,88,88,88,88,88,-20,88,88,88,88,88,88,88,88,88,-14,-13,88,88,88,88,88,-18,88,88,-186,-204,-68,-66,-72,-73,-71,-64,-65,-69,-63,-67,-70,88,88,-202,-191,-185,-193,88,88,88,88,88,-203,88,88,88,88,-6,-36,-37,181,181,-11,-12,-9,-32,-34,-33,-201,-187,-205,88,-183,88,-181,88,-22,-30,88,-10,88,-8,88,88,88,-182,88,88,88,88,-197,-196,-194,-199,88,88,-200,-198,-195,]),'UNSIGNED':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,61,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[16,16,-96,-130,-103,-94,-95,-91,-90,-105,-1,16,-93,-102,-98,-134,16,-89,-92,-133,-207,-99,-206,-97,-100,16,-101,-104,-131,16,-132,-2,-125,16,-77,16,-211,-188,16,16,-108,16,-135,-140,16,-137,-78,-209,16,-210,-189,16,16,-184,16,16,16,-111,16,-123,-138,16,-139,16,16,-136,-208,-186,-185,16,-112,-107,-124,16,16,-187,-106,-113,]),'LONG':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,61,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[17,17,-96,-130,-103,-94,-95,-91,-90,-105,-1,17,-93,-102,-98,-134,17,-89,-92,-133,-207,-99,-206,-97,-100,17,-101,-104,-131,17,-132,-2,-125,17,-77,17,-211,-188,17,17,-108,17,-135,-140,17,-137,-78,-209,17,-210,-189,17,17,-184,17,17,17,-111,17,-123,-138,17,-139,17,17,-136,-208,-186,-185,17,-112,-107,-124,17,17,-187,-106,-113,]),'.':([76,94,99,100,101,134,187,189,265,279,280,281,318,320,],[-4,-7,-3,-5,188,-3,-14,-13,-6,-11,-12,-9,-10,-8,]),'DEFAULT':([50,57,59,107,114,115,116,119,120,123,124,127,133,135,137,138,142,204,205,206,221,222,223,224,226,230,231,290,291,292,296,298,300,324,325,326,328,337,339,340,342,343,344,346,347,348,349,],[-77,-188,129,-78,-189,-177,-179,-175,129,-176,-192,129,-190,-180,129,-178,-184,129,-186,-204,-202,-191,-185,-193,129,129,-203,-201,-187,-205,-183,129,-181,129,-182,129,129,129,-197,-196,-194,-199,129,129,-200,-198,-195,]),'SWITCH':([50,57,59,107,114,115,116,119,120,123,124,127,133,135,137,138,142,204,205,206,221,222,223,224,226,230,231,290,291,292,296,298,300,324,325,326,328,337,339,340,342,343,344,346,347,348,349,],[-77,-188,132,-78,-189,-177,-179,-175,132,-176,-192,132,-190,-180,132,-178,-184,132,-186,-204,-202,-191,-185,-193,132,132,-203,-201,-187,-205,-183,132,-181,132,-182,132,132,132,-197,-196,-194,-199,132,132,-200,-198,-195,]),'AND_ASSIGN':([76,77,94,99,100,101,122,134,163,166,177,187,189,196,265,279,280,281,315,316,318,320,],[-4,-29,-7,-3,-5,-17,212,-3,-19,-21,-20,-14,-13,-18,-6,-11,-12,-9,-22,-30,-10,-8,]),'PTR_OP':([76,94,99,100,101,134,187,189,265,279,280,281,318,320,],[-4,-7,-3,-5,190,-3,-14,-13,-6,-11,-12,-9,-10,-8,]),'MUL_ASSIGN':([76,77,94,99,100,101,122,134,163,166,177,187,189,196,265,279,280,281,315,316,318,320,],[-4,-29,-7,-3,-5,-17,213,-3,-19,-21,-20,-14,-13,-18,-6,-11,-12,-9,-22,-30,-10,-8,]),';':([1,2,3,4,5,7,8,9,10,13,15,16,17,19,21,23,24,25,27,30,31,32,33,34,35,38,42,43,46,50,51,52,53,54,56,57,59,60,64,69,76,77,79,81,84,89,91,92,93,94,95,96,97,98,99,100,101,102,105,107,112,114,115,116,119,120,121,122,123,124,126,127,128,133,134,135,136,137,138,139,141,142,151,153,160,163,166,177,187,189,196,197,198,199,200,203,204,205,206,207,220,221,222,223,224,226,230,231,236,239,240,242,243,257,259,260,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,285,286,287,290,291,292,293,294,295,296,298,300,303,305,315,316,318,320,321,324,325,326,328,329,330,333,336,337,339,340,342,343,344,345,346,347,348,349,],[-79,-96,-130,-103,-94,-95,-91,-90,-105,-81,-93,-102,-98,-134,-89,-92,-133,50,-99,-97,-100,-83,-101,-104,-131,-80,-132,-82,-125,-77,107,-85,-87,-84,50,-188,124,-108,-135,-140,-4,-29,-53,-51,-55,-46,-31,-59,-38,-7,-57,-137,-41,-49,-3,-5,-17,-35,-76,-78,-87,-189,-177,-179,-175,124,206,-29,-176,-192,221,124,224,-190,-3,-180,231,124,-178,-74,-61,-184,-123,-138,-139,-19,-21,-20,-14,-13,-18,-136,-86,-88,-170,290,124,-186,-204,292,124,-202,-191,-185,-193,124,124,-203,-107,-118,-120,306,-124,-52,-50,-54,-6,-44,-42,-45,-43,-58,-36,-37,-56,-39,-40,-48,-47,-11,-12,-9,-32,-34,-33,-201,-187,-205,-62,124,-75,-183,124,-181,-106,-121,-22,-30,-10,-8,-171,124,-182,124,124,-122,-119,-60,-172,124,-197,-196,-194,-199,124,348,124,-200,-198,-195,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,37,38,39,40,41,43,45,46,47,48,49,50,54,55,56,57,59,60,62,63,65,73,78,80,82,83,85,86,87,88,90,103,106,107,108,109,110,113,114,115,116,117,118,119,120,121,123,124,127,131,133,135,137,138,142,145,147,148,150,151,152,154,158,159,161,164,165,167,168,169,173,174,175,176,178,179,180,181,182,183,184,185,186,188,190,191,192,193,194,195,201,202,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,236,237,238,241,243,250,261,290,291,292,294,296,298,300,303,304,307,317,319,322,323,324,325,326,327,328,337,339,340,342,343,344,346,347,348,349,],[19,-79,-96,-130,-103,-94,-141,-95,-91,-90,-105,19,-1,-81,19,-93,-102,-98,-110,19,-89,46,-92,19,-207,-99,-206,-109,-97,-100,-83,-101,-104,-131,60,-80,-142,-145,-143,-82,-2,-125,68,70,99,-77,-84,-211,19,-188,134,-108,-146,-144,68,19,99,99,-28,-23,99,-25,-24,-26,99,99,-27,-78,19,-209,99,-210,-189,-177,-179,99,203,-175,134,99,-176,-192,134,99,-190,-180,134,-178,-184,-115,-117,19,68,-123,99,19,99,19,254,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,279,280,99,99,99,99,99,99,-208,134,-186,-204,-68,-66,-72,-73,-71,-64,-65,-69,-63,-67,-70,99,99,-202,-191,-185,-193,99,134,99,99,134,-203,99,-107,-114,-116,99,-124,99,99,-201,-187,-205,99,-183,134,-181,-106,99,19,99,99,99,99,134,-182,134,99,134,134,-197,-196,-194,-199,134,134,-200,-198,-195,]),'=':([19,24,42,53,64,68,69,76,77,94,96,99,100,101,112,122,134,153,160,163,166,177,187,189,196,197,265,279,280,281,315,316,318,320,],[-134,-133,-132,110,-135,152,-140,-4,-29,-7,-137,-3,-5,-17,110,216,-3,-138,-139,-19,-21,-20,-14,-13,-18,-136,-6,-11,-12,-9,-22,-30,-10,-8,]),'EQ_OP':([76,77,89,91,93,94,97,98,99,100,101,102,122,134,163,166,177,187,189,196,259,265,266,267,268,269,272,273,275,276,277,278,279,280,281,285,286,287,315,316,318,320,],[-4,-29,-46,-31,-38,-7,-41,186,-3,-5,-17,-35,-29,-3,-19,-21,-20,-14,-13,-18,186,-6,-44,-42,-45,-43,-36,-37,-39,-40,-48,-47,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'?':([76,77,79,81,84,89,91,92,93,94,95,97,98,99,100,101,102,122,134,163,166,177,187,189,196,257,259,260,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,285,286,287,315,316,318,320,],[-4,-29,-53,-51,-55,-46,-31,179,-38,-7,-57,-41,-49,-3,-5,-17,-35,-29,-3,-19,-21,-20,-14,-13,-18,-52,-50,-54,-6,-44,-42,-45,-43,-58,-36,-37,-56,-39,-40,-48,-47,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'$end':([12,20,26,28,45,50,55,107,109,113,142,202,205,223,291,],[-1,0,-207,-206,-2,-77,-211,-78,-209,-210,-184,-208,-186,-185,-187,]),'CASE':([50,57,59,107,114,115,116,119,120,123,124,127,133,135,137,138,142,204,205,206,221,222,223,224,226,230,231,290,291,292,296,298,300,324,325,326,328,337,339,340,342,343,344,346,347,348,349,],[-77,-188,131,-78,-189,-177,-179,-175,131,-176,-192,131,-190,-180,131,-178,-184,131,-186,-204,-202,-191,-185,-193,131,131,-203,-201,-187,-205,-183,131,-181,131,-182,131,131,131,-197,-196,-194,-199,131,131,-200,-198,-195,]),'TYPEDEF':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,64,69,96,107,109,111,113,114,120,142,151,153,154,160,162,197,202,205,223,236,243,249,262,291,303,],[21,21,-96,-130,-103,-94,-95,-91,-90,-105,-1,21,-93,-102,-98,-134,21,-89,-92,-133,-207,-99,-206,-97,-100,21,-101,-104,-131,21,-132,-2,-125,21,-77,21,-211,-188,21,21,-108,-135,-140,-137,-78,-209,21,-210,-189,21,-184,-123,-138,21,-139,21,-136,-208,-186,-185,-107,-124,21,21,-187,-106,]),'GOTO':([50,57,59,107,114,115,116,119,120,123,124,127,133,135,137,138,142,204,205,206,221,222,223,224,226,230,231,290,291,292,296,298,300,324,325,326,328,337,339,340,342,343,344,346,347,348,349,],[-77,-188,118,-78,-189,-177,-179,-175,118,-176,-192,118,-190,-180,118,-178,-184,118,-186,-204,-202,-191,-185,-193,118,118,-203,-201,-187,-205,-183,118,-181,118,-182,118,118,118,-197,-196,-194,-199,118,118,-200,-198,-195,]),'FOR':([50,57,59,107,114,115,116,119,120,123,124,127,133,135,137,138,142,204,205,206,221,222,223,224,226,230,231,290,291,292,296,298,300,324,325,326,328,337,339,340,342,343,344,346,347,348,349,],[-77,-188,125,-78,-189,-177,-179,-175,125,-176,-192,125,-190,-180,125,-178,-184,125,-186,-204,-202,-191,-185,-193,125,125,-203,-201,-187,-205,-183,125,-181,125,-182,125,125,125,-197,-196,-194,-199,125,125,-200,-198,-195,]),'UNION':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,61,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[18,18,-96,-130,-103,-94,-95,-91,-90,-105,-1,18,-93,-102,-98,-134,18,-89,-92,-133,-207,-99,-206,-97,-100,18,-101,-104,-131,18,-132,-2,-125,18,-77,18,-211,-188,18,18,-108,18,-135,-140,18,-137,-78,-209,18,-210,-189,18,18,-184,18,18,18,-111,18,-123,-138,18,-139,18,18,-136,-208,-186,-185,18,-112,-107,-124,18,18,-187,-106,-113,]),'AUTO':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,64,69,96,107,109,111,113,114,120,142,151,153,154,160,162,197,202,205,223,236,243,249,262,291,303,],[23,23,-96,-130,-103,-94,-95,-91,-90,-105,-1,23,-93,-102,-98,-134,23,-89,-92,-133,-207,-99,-206,-97,-100,23,-101,-104,-131,23,-132,-2,-125,23,-77,23,-211,-188,23,23,-108,-135,-140,-137,-78,-209,23,-210,-189,23,-184,-123,-138,23,-139,23,-136,-208,-186,-185,-107,-124,23,23,-187,-106,]),'ENUM':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,61,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[22,22,-96,-130,-103,-94,-95,-91,-90,-105,-1,22,-93,-102,-98,-134,22,-89,-92,-133,-207,-99,-206,-97,-100,22,-101,-104,-131,22,-132,-2,-125,22,-77,22,-211,-188,22,22,-108,22,-135,-140,22,-137,-78,-209,22,-210,-189,22,22,-184,22,22,22,-111,22,-123,-138,22,-139,22,22,-136,-208,-186,-185,22,-112,-107,-124,22,22,-187,-106,-113,]),'MOD_ASSIGN':([76,77,94,99,100,101,122,134,163,166,177,187,189,196,265,279,280,281,315,316,318,320,],[-4,-29,-7,-3,-5,-17,209,-3,-19,-21,-20,-14,-13,-18,-6,-11,-12,-9,-22,-30,-10,-8,]),'ELSE':([115,116,119,123,124,135,138,142,205,206,221,223,224,231,290,291,292,296,300,325,339,340,342,343,347,348,349,],[-177,-179,-175,-176,-192,-180,-178,-184,-186,-204,-202,-185,-193,-203,-201,-187,-205,-183,-181,-182,-197,-196,346,-199,-200,-198,-195,]),'AND_OP':([76,77,79,81,84,89,91,93,94,95,97,98,99,100,101,102,122,134,163,166,177,187,189,196,257,259,260,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,285,286,287,315,316,318,320,],[-4,-29,-53,-51,-55,-46,-31,-38,-7,182,-41,-49,-3,-5,-17,-35,-29,-3,-19,-21,-20,-14,-13,-18,-52,-50,-54,-6,-44,-42,-45,-43,182,-36,-37,-56,-39,-40,-48,-47,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'|':([76,77,79,81,84,89,91,93,94,97,98,99,100,101,102,122,134,163,166,177,187,189,196,257,259,260,265,266,267,268,269,272,273,274,275,276,277,278,279,280,281,285,286,287,315,316,318,320,],[-4,-29,-53,-51,169,-46,-31,-38,-7,-41,-49,-3,-5,-17,-35,-29,-3,-19,-21,-20,-14,-13,-18,-52,-50,-54,-6,-44,-42,-45,-43,-36,-37,169,-39,-40,-48,-47,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'GE_OP':([76,77,89,91,93,94,97,99,100,101,102,122,134,163,166,177,187,189,196,265,266,267,268,269,272,273,275,276,277,278,279,280,281,285,286,287,315,316,318,320,],[-4,-29,175,-31,-38,-7,-41,-3,-5,-17,-35,-29,-3,-19,-21,-20,-14,-13,-18,-6,-44,-42,-45,-43,-36,-37,-39,-40,175,175,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'ELLIPSIS':([162,],[255,]),'LEFT_OP':([76,77,91,93,94,97,99,100,101,102,122,134,163,166,177,187,189,196,265,266,267,268,269,272,273,275,276,279,280,281,285,286,287,315,316,318,320,],[-4,-29,-31,-38,-7,183,-3,-5,-17,-35,-29,-3,-19,-21,-20,-14,-13,-18,-6,183,183,183,183,-36,-37,-39,-40,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'LE_OP':([76,77,89,91,93,94,97,99,100,101,102,122,134,163,166,177,187,189,196,265,266,267,268,269,272,273,275,276,277,278,279,280,281,285,286,287,315,316,318,320,],[-4,-29,173,-31,-38,-7,-41,-3,-5,-17,-35,-29,-3,-19,-21,-20,-14,-13,-18,-6,-44,-42,-45,-43,-36,-37,-39,-40,173,173,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'[':([1,2,3,4,5,6,7,8,9,10,13,15,16,17,19,21,23,24,27,30,31,32,33,34,35,38,39,40,41,42,43,46,54,60,62,63,64,69,73,76,94,96,99,100,101,134,145,147,151,153,154,157,159,160,171,187,189,197,236,237,238,243,246,252,253,262,264,265,279,280,281,303,308,309,310,312,314,318,320,331,332,],[-79,-96,-130,-103,-94,-141,-95,-91,-90,-105,-81,-93,-102,-98,-134,-89,-92,49,-99,-97,-100,-83,-101,-104,-131,-80,-142,-145,-143,49,-82,-125,-84,-108,-146,-144,-135,-140,158,-4,-7,-137,-3,-5,192,-3,-115,-117,-123,-138,158,250,158,-139,158,-14,-13,-136,-107,-114,-116,-124,-166,-162,250,158,158,-6,-11,-12,-9,-106,-167,-161,-168,-164,-163,-10,-8,-169,-165,]),']':([49,76,77,79,81,84,89,91,92,93,94,95,97,98,99,100,101,102,104,105,122,139,141,158,163,166,177,187,189,196,250,251,257,259,260,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,284,285,286,287,293,295,313,315,316,318,320,333,],[96,-4,-29,-53,-51,-55,-46,-31,-59,-38,-7,-57,-41,-49,-3,-5,-17,-35,197,-76,-29,-74,-61,252,-19,-21,-20,-14,-13,-18,312,314,-52,-50,-54,-6,-44,-42,-45,-43,-58,-36,-37,-56,-39,-40,-48,-47,-11,-12,-9,320,-32,-34,-33,-62,-75,332,-22,-30,-10,-8,-60,]),'LEFT_ASSIGN':([76,77,94,99,100,101,122,134,163,166,177,187,189,196,265,279,280,281,315,316,318,320,],[-4,-29,-7,-3,-5,-17,215,-3,-19,-21,-20,-14,-13,-18,-6,-11,-12,-9,-22,-30,-10,-8,]),'STRING_LITERAL':([49,50,57,59,78,80,82,83,85,86,87,88,90,103,106,107,110,114,115,116,117,119,120,121,123,124,127,131,133,135,137,138,142,152,158,164,165,167,168,169,173,174,175,176,178,179,180,181,182,183,184,185,186,191,192,193,194,195,201,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,241,250,261,290,291,292,294,296,298,300,304,317,319,322,323,324,325,326,327,328,337,339,340,342,343,344,346,347,348,349,],[100,-77,-188,100,100,100,-28,-23,100,-25,-24,-26,100,100,-27,-78,100,-189,-177,-179,100,-175,100,100,-176,-192,100,100,-190,-180,100,-178,-184,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-186,-204,-68,-66,-72,-73,-71,-64,-65,-69,-63,-67,-70,100,100,-202,-191,-185,-193,100,100,100,100,100,-203,100,100,100,100,-201,-187,-205,100,-183,100,-181,100,100,100,100,100,100,-182,100,100,100,100,-197,-196,-194,-199,100,100,-200,-198,-195,]),'SUB_ASSIGN':([76,77,94,99,100,101,122,134,163,166,177,187,189,196,265,279,280,281,315,316,318,320,],[-4,-29,-7,-3,-5,-17,208,-3,-19,-21,-20,-14,-13,-18,-6,-11,-12,-9,-22,-30,-10,-8,]),'RETURN':([50,57,59,107,114,115,116,119,120,123,124,127,133,135,137,138,142,204,205,206,221,222,223,224,226,230,231,290,291,292,296,298,300,324,325,326,328,337,339,340,342,343,344,346,347,348,349,],[-77,-188,121,-78,-189,-177,-179,-175,121,-176,-192,121,-190,-180,121,-178,-184,121,-186,-204,-202,-191,-185,-193,121,121,-203,-201,-187,-205,-183,121,-181,121,-182,121,121,121,-197,-196,-194,-199,121,121,-200,-198,-195,]),':':([2,3,4,5,7,10,16,17,19,24,27,30,31,33,34,35,42,46,60,64,69,76,77,79,81,84,89,91,92,93,94,95,96,97,98,99,100,101,102,105,122,129,134,139,141,145,147,148,151,153,160,163,166,177,187,189,196,197,228,236,237,238,240,243,257,259,260,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,285,286,287,293,295,303,307,315,316,318,320,333,],[-96,-130,-103,-94,-95,-105,-102,-98,-134,-133,-99,-97,-100,-101,-104,-131,-132,-125,-108,-135,-140,-4,-29,-53,-51,-55,-46,-31,-59,-38,-7,-57,-137,-41,-49,-3,-5,-17,-35,-76,-29,226,230,-74,-61,-115,-117,241,-123,-138,-139,-19,-21,-20,-14,-13,-18,-136,298,-107,-114,-116,304,-124,-52,-50,-54,-6,-44,-42,-45,-43,-58,317,-36,-37,-56,-39,-40,-48,-47,-11,-12,-9,-32,-34,-33,-62,-75,-106,241,-22,-30,-10,-8,-60,]),'STRUCT':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,61,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[29,29,-96,-130,-103,-94,-95,-91,-90,-105,-1,29,-93,-102,-98,-134,29,-89,-92,-133,-207,-99,-206,-97,-100,29,-101,-104,-131,29,-132,-2,-125,29,-77,29,-211,-188,29,29,-108,29,-135,-140,29,-137,-78,-209,29,-210,-189,29,29,-184,29,29,29,-111,29,-123,-138,29,-139,29,29,-136,-208,-186,-185,29,-112,-107,-124,29,29,-187,-106,-113,]),'XOR_ASSIGN':([76,77,94,99,100,101,122,134,163,166,177,187,189,196,265,279,280,281,315,316,318,320,],[-4,-29,-7,-3,-5,-17,210,-3,-19,-21,-20,-14,-13,-18,-6,-11,-12,-9,-22,-30,-10,-8,]),'INT':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,61,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[30,30,-96,-130,-103,-94,-95,-91,-90,-105,-1,30,-93,-102,-98,-134,30,-89,-92,-133,-207,-99,-206,-97,-100,30,-101,-104,-131,30,-132,-2,-125,30,-77,30,-211,-188,30,30,-108,30,-135,-140,30,-137,-78,-209,30,-210,-189,30,30,-184,30,30,30,-111,30,-123,-138,30,-139,30,30,-136,-208,-186,-185,30,-112,-107,-124,30,30,-187,-106,-113,]),'DOUBLE':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,61,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[31,31,-96,-130,-103,-94,-95,-91,-90,-105,-1,31,-93,-102,-98,-134,31,-89,-92,-133,-207,-99,-206,-97,-100,31,-101,-104,-131,31,-132,-2,-125,31,-77,31,-211,-188,31,31,-108,31,-135,-140,31,-137,-78,-209,31,-210,-189,31,31,-184,31,31,31,-111,31,-123,-138,31,-139,31,31,-136,-208,-186,-185,31,-112,-107,-124,31,31,-187,-106,-113,]),'TYPE_NAME':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,61,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[10,10,-96,-130,-103,-94,-95,-91,-90,-105,-1,10,-93,-102,-98,-134,10,-89,-92,-133,-207,-99,-206,-97,-100,10,-101,-104,-131,10,-132,-2,-125,10,-77,10,-211,-188,10,10,-108,10,-135,-140,10,-137,-78,-209,10,-210,-189,10,10,-184,10,10,10,-111,10,-123,-138,10,-139,10,10,-136,-208,-186,-185,10,-112,-107,-124,10,10,-187,-106,-113,]),'OR_ASSIGN':([76,77,94,99,100,101,122,134,163,166,177,187,189,196,265,279,280,281,315,316,318,320,],[-4,-29,-7,-3,-5,-17,211,-3,-19,-21,-20,-14,-13,-18,-6,-11,-12,-9,-22,-30,-10,-8,]),'}':([50,57,59,66,67,68,76,77,79,81,84,89,91,92,93,94,95,97,98,99,100,101,102,105,107,114,115,116,119,120,122,123,124,127,133,135,138,141,142,144,146,149,163,166,177,187,189,196,200,204,205,206,221,222,223,224,231,234,235,244,245,257,259,260,265,266,267,268,269,270,272,273,274,275,276,277,278,279,280,281,285,286,287,288,289,290,291,292,293,296,300,306,315,316,318,320,321,322,325,333,335,336,339,340,342,343,347,348,349,],[-77,-188,142,-126,151,-128,-4,-29,-53,-51,-55,-46,-31,-59,-38,-7,-57,-41,-49,-3,-5,-17,-35,-76,-78,-189,-177,-179,-175,205,-29,-176,-192,223,-190,-180,-178,-61,-184,236,-111,243,-19,-21,-20,-14,-13,-18,-170,291,-186,-204,-202,-191,-185,-193,-203,303,-112,-127,-129,-52,-50,-54,-6,-44,-42,-45,-43,-58,-36,-37,-56,-39,-40,-48,-47,-11,-12,-9,-32,-34,-33,-173,321,-201,-187,-205,-62,-183,-181,-113,-22,-30,-10,-8,-171,336,-182,-60,-174,-172,-197,-196,-194,-199,-200,-198,-195,]),'SIGNED':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,61,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[33,33,-96,-130,-103,-94,-95,-91,-90,-105,-1,33,-93,-102,-98,-134,33,-89,-92,-133,-207,-99,-206,-97,-100,33,-101,-104,-131,33,-132,-2,-125,33,-77,33,-211,-188,33,33,-108,33,-135,-140,33,-137,-78,-209,33,-210,-189,33,33,-184,33,33,33,-111,33,-123,-138,33,-139,33,33,-136,-208,-186,-185,33,-112,-107,-124,33,33,-187,-106,-113,]),'FLOAT':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,61,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[27,27,-96,-130,-103,-94,-95,-91,-90,-105,-1,27,-93,-102,-98,-134,27,-89,-92,-133,-207,-99,-206,-97,-100,27,-101,-104,-131,27,-132,-2,-125,27,-77,27,-211,-188,27,27,-108,27,-135,-140,27,-137,-78,-209,27,-210,-189,27,27,-184,27,27,27,-111,27,-123,-138,27,-139,27,27,-136,-208,-186,-185,27,-112,-107,-124,27,27,-187,-106,-113,]),'BREAK':([50,57,59,107,114,115,116,119,120,123,124,127,133,135,137,138,142,204,205,206,221,222,223,224,226,230,231,290,291,292,296,298,300,324,325,326,328,337,339,340,342,343,344,346,347,348,349,],[-77,-188,136,-78,-189,-177,-179,-175,136,-176,-192,136,-190,-180,136,-178,-184,136,-186,-204,-202,-191,-185,-193,136,136,-203,-201,-187,-205,-183,136,-181,136,-182,136,136,136,-197,-196,-194,-199,136,136,-200,-198,-195,]),'CONTINUE':([50,57,59,107,114,115,116,119,120,123,124,127,133,135,137,138,142,204,205,206,221,222,223,224,226,230,231,290,291,292,296,298,300,324,325,326,328,337,339,340,342,343,344,346,347,348,349,],[-77,-188,126,-78,-189,-177,-179,-175,126,-176,-192,126,-190,-180,126,-178,-184,126,-186,-204,-202,-191,-185,-193,126,126,-203,-201,-187,-205,-183,126,-181,126,-182,126,126,126,-197,-196,-194,-199,126,126,-200,-198,-195,]),'VOLATILE':([0,1,2,3,4,5,6,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,39,40,42,45,46,48,50,53,55,57,58,59,60,61,62,64,69,85,96,107,109,111,113,114,117,120,142,143,144,145,146,147,151,153,154,160,162,167,197,202,205,223,234,235,236,243,249,262,291,303,306,],[35,35,-96,-130,-103,-94,35,-95,-91,-90,-105,-1,35,-93,-102,-98,-134,35,-89,-92,-133,-207,-99,-206,-97,-100,35,-101,-104,-131,35,35,-145,-132,-2,-125,35,-77,35,-211,-188,35,35,-108,35,-146,-135,-140,35,-137,-78,-209,35,-210,-189,35,35,-184,35,35,35,-111,35,-123,-138,35,-139,35,35,-136,-208,-186,-185,35,-112,-107,-124,35,35,-187,-106,-113,]),'REGISTER':([0,1,2,3,4,5,7,8,9,10,12,13,15,16,17,19,20,21,23,24,26,27,28,30,31,32,33,34,35,36,42,45,46,48,50,53,55,57,58,59,60,64,69,96,107,109,111,113,114,120,142,151,153,154,160,162,197,202,205,223,236,243,249,262,291,303,],[15,15,-96,-130,-103,-94,-95,-91,-90,-105,-1,15,-93,-102,-98,-134,15,-89,-92,-133,-207,-99,-206,-97,-100,15,-101,-104,-131,15,-132,-2,-125,15,-77,15,-211,-188,15,15,-108,-135,-140,-137,-78,-209,15,-210,-189,15,-184,-123,-138,15,-139,15,-136,-208,-186,-185,-107,-124,15,15,-187,-106,]),'{':([18,19,22,24,29,36,37,42,46,50,53,57,58,59,60,64,69,96,107,110,111,114,115,116,119,120,123,124,127,133,135,137,138,142,153,160,197,201,204,205,206,221,222,223,224,226,230,231,290,291,292,296,298,300,322,324,325,326,328,337,339,340,342,343,344,346,347,348,349,],[-110,-134,47,-133,-109,59,61,-132,65,-77,59,-188,59,59,143,-135,-140,-137,-78,201,59,-189,-177,-179,-175,59,-176,-192,59,-190,-180,59,-178,-184,-138,-139,-136,201,59,-186,-204,-202,-191,-185,-193,59,59,-203,-201,-187,-205,-183,59,-181,201,59,-182,59,59,59,-197,-196,-194,-199,59,59,-200,-198,-195,]),'>':([76,77,89,91,93,94,97,99,100,101,102,122,134,163,166,177,187,189,196,265,266,267,268,269,272,273,275,276,277,278,279,280,281,285,286,287,315,316,318,320,],[-4,-29,176,-31,-38,-7,-41,-3,-5,-17,-35,-29,-3,-19,-21,-20,-14,-13,-18,-6,-44,-42,-45,-43,-36,-37,-39,-40,176,176,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'INC_OP':([49,50,57,59,76,78,80,82,83,85,86,87,88,90,94,99,100,101,103,106,107,110,114,115,116,117,119,120,121,123,124,127,131,133,134,135,137,138,142,152,158,164,165,167,168,169,173,174,175,176,178,179,180,181,182,183,184,185,186,187,189,191,192,193,194,195,201,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,241,250,261,265,279,280,281,290,291,292,294,296,298,300,304,317,318,319,320,322,323,324,325,326,327,328,337,339,340,342,343,344,346,347,348,349,],[103,-77,-188,103,-4,103,103,-28,-23,103,-25,-24,-26,103,-7,-3,-5,189,103,-27,-78,103,-189,-177,-179,103,-175,103,103,-176,-192,103,103,-190,-3,-180,103,-178,-184,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-14,-13,103,103,103,103,103,103,103,-186,-204,-68,-66,-72,-73,-71,-64,-65,-69,-63,-67,-70,103,103,-202,-191,-185,-193,103,103,103,103,103,-203,103,103,103,103,-6,-11,-12,-9,-201,-187,-205,103,-183,103,-181,103,103,-10,103,-8,103,103,103,-182,103,103,103,103,-197,-196,-194,-199,103,103,-200,-198,-195,]),'<':([76,77,89,91,93,94,97,99,100,101,102,122,134,163,166,177,187,189,196,265,266,267,268,269,272,273,275,276,277,278,279,280,281,285,286,287,315,316,318,320,],[-4,-29,174,-31,-38,-7,-41,-3,-5,-17,-35,-29,-3,-19,-21,-20,-14,-13,-18,-6,-44,-42,-45,-43,-36,-37,-39,-40,174,174,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'NE_OP':([76,77,89,91,93,94,97,98,99,100,101,102,122,134,163,166,177,187,189,196,259,265,266,267,268,269,272,273,275,276,277,278,279,280,281,285,286,287,315,316,318,320,],[-4,-29,-46,-31,-38,-7,-41,185,-3,-5,-17,-35,-29,-3,-19,-21,-20,-14,-13,-18,185,-6,-44,-42,-45,-43,-36,-37,-39,-40,-48,-47,-11,-12,-9,-32,-34,-33,-22,-30,-10,-8,]),'~':([49,50,57,59,78,80,82,83,85,86,87,88,90,103,106,107,110,114,115,116,117,119,120,121,123,124,127,131,133,135,137,138,142,152,158,164,165,167,168,169,173,174,175,176,178,179,180,181,182,183,184,185,186,191,192,193,194,195,201,204,205,206,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,229,230,231,233,241,250,261,290,291,292,294,296,298,300,304,317,319,322,323,324,325,326,327,328,337,339,340,342,343,344,346,347,348,349,],[106,-77,-188,106,106,106,-28,-23,106,-25,-24,-26,106,106,-27,-78,106,-189,-177,-179,106,-175,106,106,-176,-192,106,106,-190,-180,106,-178,-184,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-186,-204,-68,-66,-72,-73,-71,-64,-65,-69,-63,-67,-70,106,106,-202,-191,-185,-193,106,106,106,106,106,-203,106,106,106,106,-201,-187,-205,106,-183,106,-181,106,106,106,106,106,106,-182,106,106,106,106,-197,-196,-194,-199,106,106,-200,-198,-195,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'storage_class_specifier':([0,1,13,20,32,36,48,53,58,59,111,120,154,162,249,262,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'expression_statement':([59,120,127,137,204,220,226,230,294,298,324,326,328,337,344,346,],[115,115,115,115,115,294,115,115,323,115,115,115,115,115,115,115,]),'type_name':([85,117,167,],[170,170,258,]),'unary_expression':([49,59,78,80,85,90,103,110,117,120,121,127,131,137,152,158,164,165,167,168,169,173,174,175,176,178,179,180,181,182,183,184,185,186,191,192,193,194,195,201,204,219,220,225,226,227,229,230,233,241,250,261,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[77,122,163,166,122,77,196,122,122,122,122,122,77,122,77,77,122,77,122,77,77,77,77,77,77,77,122,77,77,77,77,77,77,77,122,122,77,77,77,122,122,122,122,122,122,122,122,122,122,77,77,77,122,122,77,77,122,122,122,122,122,122,122,122,122,122,]),'conditional_expression':([49,59,85,110,117,120,121,127,131,137,152,158,164,167,179,191,192,201,204,219,220,225,226,227,229,230,233,241,250,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[105,141,141,141,141,141,141,141,105,141,105,105,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,105,105,141,141,105,333,141,141,141,141,141,141,141,141,141,141,]),'struct_or_union_specifier':([0,1,13,20,32,36,48,53,58,59,61,85,111,117,120,143,144,145,147,154,162,167,234,249,262,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'exclusive_or_expression':([49,59,85,110,117,120,121,127,131,137,152,158,164,167,169,178,179,182,191,192,201,204,219,220,225,226,227,229,230,233,241,250,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,260,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'initializer':([110,201,322,],[199,288,335,]),'iteration_statement':([59,120,127,137,204,226,230,298,324,326,328,337,344,346,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'init_declarator_list':([25,56,],[51,51,]),'enumerator_list':([47,65,],[67,149,]),'struct_declaration':([61,143,144,234,],[146,146,235,235,]),'abstract_declarator':([73,154,171,262,],[155,248,263,248,]),'pointer':([0,6,14,20,25,39,56,73,108,148,154,171,262,307,],[11,41,11,11,11,63,11,159,11,11,159,264,264,11,]),'and_expression':([49,59,85,110,117,120,121,127,131,137,152,158,164,165,167,169,178,179,182,191,192,201,204,219,220,225,226,227,229,230,233,241,250,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[81,81,81,81,81,81,81,81,81,81,81,81,81,257,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'external_declaration':([0,20,],[12,45,]),'type_specifier':([0,1,13,20,32,36,48,53,58,59,61,85,111,117,120,143,144,145,147,154,162,167,234,249,262,],[13,13,13,13,13,13,13,13,13,13,145,145,13,145,13,145,145,145,145,13,13,145,145,13,13,]),'compound_statement':([36,53,58,59,111,120,127,137,204,226,230,298,324,326,328,337,344,346,],[55,109,113,123,202,123,123,123,123,123,123,123,123,123,123,123,123,123,]),'inclusive_or_expression':([49,59,85,110,117,120,121,127,131,137,152,158,164,167,178,179,182,191,192,201,204,219,220,225,226,227,229,230,233,241,250,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,274,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'logical_or_expression':([49,59,85,110,117,120,121,127,131,137,152,158,164,167,179,191,192,201,204,219,220,225,226,227,229,230,233,241,250,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'selection_statement':([59,120,127,137,204,226,230,298,324,326,328,337,344,346,],[138,138,138,138,138,138,138,138,138,138,138,138,138,138,]),'postfix_expression':([49,59,78,80,85,90,103,110,117,120,121,127,131,137,152,158,164,165,167,168,169,173,174,175,176,178,179,180,181,182,183,184,185,186,191,192,193,194,195,201,204,219,220,225,226,227,229,230,233,241,250,261,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'relational_expression':([49,59,85,110,117,120,121,127,131,137,152,158,164,165,167,168,169,178,179,182,185,186,191,192,201,204,219,220,225,226,227,229,230,233,241,250,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,277,278,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'statement':([59,120,127,137,204,226,230,298,324,326,328,337,344,346,],[133,133,222,232,222,296,300,325,339,340,342,343,347,349,]),'unary_operator':([49,59,78,80,85,90,103,110,117,120,121,127,131,137,152,158,164,165,167,168,169,173,174,175,176,178,179,180,181,182,183,184,185,186,191,192,193,194,195,201,204,219,220,225,226,227,229,230,233,241,250,261,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'cast_expression':([49,59,85,90,110,117,120,121,127,131,137,152,158,164,165,167,168,169,173,174,175,176,178,179,180,181,182,183,184,185,186,191,192,193,194,195,201,204,219,220,225,226,227,229,230,233,241,250,261,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[91,91,91,177,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,285,286,287,91,91,91,91,91,91,91,91,91,91,91,91,316,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'initializer_list':([201,],[289,]),'struct_declarator_list':([148,],[242,]),'multiplicative_expression':([49,59,85,110,117,120,121,127,131,137,152,158,164,165,167,168,169,173,174,175,176,178,179,180,181,182,183,184,185,186,191,192,201,204,219,220,225,226,227,229,230,233,241,250,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,272,273,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'translation_unit':([0,],[20,]),'assignment_operator':([122,],[219,]),'struct_or_union':([0,1,13,20,32,36,48,53,58,59,61,85,111,117,120,143,144,145,147,154,162,167,234,249,262,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'enumerator':([47,65,150,],[66,66,244,]),'assignment_expression':([59,85,110,117,120,121,127,137,164,167,179,191,192,201,204,219,220,225,226,227,229,230,233,294,298,319,322,323,324,326,327,328,337,344,346,],[139,139,200,139,139,139,139,139,139,139,139,282,139,200,139,293,139,295,139,139,139,139,139,139,139,334,200,139,139,139,139,139,139,139,139,]),'parameter_type_list':([48,154,249,262,],[71,247,311,247,]),'parameter_declaration':([48,154,162,249,262,],[72,72,256,72,72,]),'direct_declarator':([0,11,14,20,25,56,73,108,148,154,159,307,],[24,42,24,24,24,24,24,24,24,24,42,24,]),'type_qualifier_list':([6,],[39,]),'argument_expression_list':([191,],[283,]),'direct_abstract_declarator':([73,154,159,171,262,264,],[157,157,253,157,157,253,]),'additive_expression':([49,59,85,110,117,120,121,127,131,137,152,158,164,165,167,168,169,173,174,175,176,178,179,182,183,184,185,186,191,192,201,204,219,220,225,226,227,229,230,233,241,250,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,275,276,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'equality_expression':([49,59,85,110,117,120,121,127,131,137,152,158,164,165,167,168,169,178,179,182,191,192,201,204,219,220,225,226,227,229,230,233,241,250,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,259,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'primary_expression':([49,59,78,80,85,90,103,110,117,120,121,127,131,137,152,158,164,165,167,168,169,173,174,175,176,178,179,180,181,182,183,184,185,186,191,192,193,194,195,201,204,219,220,225,226,227,229,230,233,241,250,261,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'declaration_specifiers':([0,1,13,20,32,36,48,53,58,59,111,120,154,162,249,262,],[25,38,43,25,54,56,73,56,56,56,56,56,73,73,73,73,]),'declaration':([0,20,36,53,58,59,111,120,],[26,26,57,57,114,57,114,114,]),'logical_and_expression':([49,59,85,110,117,120,121,127,131,137,152,158,164,167,178,179,191,192,201,204,219,220,225,226,227,229,230,233,241,250,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,270,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'declarator':([0,14,20,25,56,73,108,148,154,307,],[36,44,36,53,112,156,112,240,44,240,]),'shift_expression':([49,59,85,110,117,120,121,127,131,137,152,158,164,165,167,168,169,173,174,175,176,178,179,182,185,186,191,192,201,204,219,220,225,226,227,229,230,233,241,250,294,298,304,317,319,322,323,324,326,327,328,337,344,346,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,266,267,268,269,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'identifier_list':([48,],[74,]),'jump_statement':([59,120,127,137,204,226,230,298,324,326,328,337,344,346,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'struct_declarator':([148,307,],[239,330,]),'function_definition':([0,20,],[28,28,]),'parameter_list':([48,154,249,262,],[75,75,75,75,]),'enum_specifier':([0,1,13,20,32,36,48,53,58,59,61,85,111,117,120,143,144,145,147,154,162,167,234,249,262,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'type_qualifier':([0,1,6,13,20,32,36,39,48,53,58,59,61,85,111,117,120,143,144,145,147,154,162,167,234,249,262,],[32,32,40,32,32,32,32,62,32,32,32,32,147,147,32,147,32,147,147,147,147,32,32,147,147,32,32,]),'struct_declaration_list':([61,143,],[144,234,]),'labeled_statement':([59,120,127,137,204,226,230,298,324,326,328,337,344,346,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'declaration_list':([36,53,59,],[58,111,120,]),'specifier_qualifier_list':([61,85,117,143,144,145,147,167,234,],[148,171,171,148,148,237,238,171,148,]),'constant_expression':([49,131,152,158,241,250,304,],[104,228,245,251,305,313,329,]),'init_declarator':([25,56,108,],[52,52,198,]),'statement_list':([59,120,],[127,204,]),'expression':([59,85,117,120,121,127,137,164,167,179,192,204,220,226,227,229,230,233,294,298,323,324,326,327,328,337,344,346,],[128,172,172,128,207,128,128,172,172,271,284,128,128,128,297,299,128,302,128,128,338,128,128,341,128,128,128,128,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> translation_unit","S'",1,None,None,None),
  ('translation_unit -> external_declaration','translation_unit',1,'p_translation_unit','parser.py',58),
  ('translation_unit -> translation_unit external_declaration','translation_unit',2,'p_translation_unit','parser.py',59),
  ('primary_expression -> IDENTIFIER','primary_expression',1,'p_primary_expression','parser.py',66),
  ('primary_expression -> CONSTANT','primary_expression',1,'p_primary_expression','parser.py',67),
  ('primary_expression -> STRING_LITERAL','primary_expression',1,'p_primary_expression','parser.py',68),
  ('primary_expression -> ( expression )','primary_expression',3,'p_primary_expression','parser.py',69),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','parser.py',78),
  ('postfix_expression -> postfix_expression [ expression ]','postfix_expression',4,'p_postfix_expression','parser.py',79),
  ('postfix_expression -> postfix_expression ( )','postfix_expression',3,'p_postfix_expression','parser.py',80),
  ('postfix_expression -> postfix_expression ( argument_expression_list )','postfix_expression',4,'p_postfix_expression','parser.py',81),
  ('postfix_expression -> postfix_expression . IDENTIFIER','postfix_expression',3,'p_postfix_expression','parser.py',82),
  ('postfix_expression -> postfix_expression PTR_OP IDENTIFIER','postfix_expression',3,'p_postfix_expression','parser.py',83),
  ('postfix_expression -> postfix_expression INC_OP','postfix_expression',2,'p_postfix_expression','parser.py',84),
  ('postfix_expression -> postfix_expression DEC_OP','postfix_expression',2,'p_postfix_expression','parser.py',85),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list','parser.py',94),
  ('argument_expression_list -> argument_expression_list , assignment_expression','argument_expression_list',3,'p_argument_expression_list','parser.py',95),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','parser.py',102),
  ('unary_expression -> INC_OP unary_expression','unary_expression',2,'p_unary_expression','parser.py',103),
  ('unary_expression -> DEC_OP unary_expression','unary_expression',2,'p_unary_expression','parser.py',104),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','parser.py',105),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression','parser.py',106),
  ('unary_expression -> SIZEOF ( type_name )','unary_expression',4,'p_unary_expression','parser.py',107),
  ('unary_operator -> &','unary_operator',1,'p_unary_operator','parser.py',115),
  ('unary_operator -> *','unary_operator',1,'p_unary_operator','parser.py',116),
  ('unary_operator -> +','unary_operator',1,'p_unary_operator','parser.py',117),
  ('unary_operator -> -','unary_operator',1,'p_unary_operator','parser.py',118),
  ('unary_operator -> ~','unary_operator',1,'p_unary_operator','parser.py',119),
  ('unary_operator -> !','unary_operator',1,'p_unary_operator','parser.py',120),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','parser.py',127),
  ('cast_expression -> ( type_name ) cast_expression','cast_expression',4,'p_cast_expression','parser.py',128),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression','parser.py',135),
  ('multiplicative_expression -> multiplicative_expression * cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',136),
  ('multiplicative_expression -> multiplicative_expression / cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',137),
  ('multiplicative_expression -> multiplicative_expression % cast_expression','multiplicative_expression',3,'p_multiplicative_expression','parser.py',138),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression','parser.py',145),
  ('additive_expression -> additive_expression + multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',146),
  ('additive_expression -> additive_expression - multiplicative_expression','additive_expression',3,'p_additive_expression','parser.py',147),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression','parser.py',155),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression','parser.py',156),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression','parser.py',157),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression','parser.py',164),
  ('relational_expression -> relational_expression < shift_expression','relational_expression',3,'p_relational_expression','parser.py',165),
  ('relational_expression -> relational_expression > shift_expression','relational_expression',3,'p_relational_expression','parser.py',166),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression','parser.py',167),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression','parser.py',168),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression','parser.py',175),
  ('equality_expression -> equality_expression EQ_OP relational_expression','equality_expression',3,'p_equality_expression','parser.py',176),
  ('equality_expression -> equality_expression NE_OP relational_expression','equality_expression',3,'p_equality_expression','parser.py',177),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression','parser.py',184),
  ('and_expression -> and_expression & equality_expression','and_expression',3,'p_and_expression','parser.py',185),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression','parser.py',192),
  ('exclusive_or_expression -> exclusive_or_expression ^ and_expression','exclusive_or_expression',3,'p_exclusive_or_expression','parser.py',193),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression','parser.py',200),
  ('inclusive_or_expression -> inclusive_or_expression | exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression','parser.py',201),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression','parser.py',208),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression','parser.py',209),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression','parser.py',216),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression','parser.py',217),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression','parser.py',224),
  ('conditional_expression -> logical_or_expression ? expression : conditional_expression','conditional_expression',5,'p_conditional_expression','parser.py',225),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression','parser.py',232),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','parser.py',233),
  ('assignment_operator -> =','assignment_operator',1,'p_assignment_operator','parser.py',240),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',241),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',242),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',243),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',244),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',245),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',246),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',247),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',248),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',249),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator','parser.py',250),
  ('expression -> assignment_expression','expression',1,'p_expression','parser.py',257),
  ('expression -> expression , assignment_expression','expression',3,'p_expression','parser.py',258),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser.py',265),
  ('declaration -> declaration_specifiers ;','declaration',2,'p_declaration','parser.py',271),
  ('declaration -> declaration_specifiers init_declarator_list ;','declaration',3,'p_declaration','parser.py',272),
  ('declaration_specifiers -> storage_class_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',279),
  ('declaration_specifiers -> storage_class_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',280),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',281),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',282),
  ('declaration_specifiers -> type_qualifier','declaration_specifiers',1,'p_declaration_specifiers','parser.py',283),
  ('declaration_specifiers -> type_qualifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers','parser.py',284),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list','parser.py',291),
  ('init_declarator_list -> init_declarator_list , init_declarator','init_declarator_list',3,'p_init_declarator_list','parser.py',292),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','parser.py',299),
  ('init_declarator -> declarator = initializer','init_declarator',3,'p_init_declarator','parser.py',300),
  ('storage_class_specifier -> TYPEDEF','storage_class_specifier',1,'p_storage_class_specifier','parser.py',309),
  ('storage_class_specifier -> EXTERN','storage_class_specifier',1,'p_storage_class_specifier','parser.py',310),
  ('storage_class_specifier -> STATIC','storage_class_specifier',1,'p_storage_class_specifier','parser.py',311),
  ('storage_class_specifier -> AUTO','storage_class_specifier',1,'p_storage_class_specifier','parser.py',312),
  ('storage_class_specifier -> REGISTER','storage_class_specifier',1,'p_storage_class_specifier','parser.py',313),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','parser.py',320),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','parser.py',321),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier','parser.py',322),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','parser.py',323),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier','parser.py',324),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','parser.py',325),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier','parser.py',326),
  ('type_specifier -> SIGNED','type_specifier',1,'p_type_specifier','parser.py',327),
  ('type_specifier -> UNSIGNED','type_specifier',1,'p_type_specifier','parser.py',328),
  ('type_specifier -> struct_or_union_specifier','type_specifier',1,'p_type_specifier','parser.py',329),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier','parser.py',330),
  ('type_specifier -> TYPE_NAME','type_specifier',1,'p_type_specifier','parser.py',331),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER { struct_declaration_list }','struct_or_union_specifier',5,'p_struct_or_union_specifier','parser.py',337),
  ('struct_or_union_specifier -> struct_or_union { struct_declaration_list }','struct_or_union_specifier',4,'p_struct_or_union_specifier','parser.py',338),
  ('struct_or_union_specifier -> struct_or_union IDENTIFIER','struct_or_union_specifier',2,'p_struct_or_union_specifier','parser.py',339),
  ('struct_or_union -> STRUCT','struct_or_union',1,'p_struct_or_union','parser.py',347),
  ('struct_or_union -> UNION','struct_or_union',1,'p_struct_or_union','parser.py',348),
  ('struct_declaration_list -> struct_declaration','struct_declaration_list',1,'p_struct_declaration_list','parser.py',354),
  ('struct_declaration_list -> struct_declaration_list struct_declaration','struct_declaration_list',2,'p_struct_declaration_list','parser.py',355),
  ('struct_declaration -> specifier_qualifier_list struct_declarator_list ;','struct_declaration',3,'p_struct_declaration','parser.py',362),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',368),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',369),
  ('specifier_qualifier_list -> type_qualifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list','parser.py',370),
  ('specifier_qualifier_list -> type_qualifier','specifier_qualifier_list',1,'p_specifier_qualifier_list','parser.py',371),
  ('struct_declarator_list -> struct_declarator','struct_declarator_list',1,'p_struct_declarator_list','parser.py',378),
  ('struct_declarator_list -> struct_declarator_list , struct_declarator','struct_declarator_list',3,'p_struct_declarator_list','parser.py',379),
  ('struct_declarator -> declarator','struct_declarator',1,'p_struct_declarator','parser.py',386),
  ('struct_declarator -> : constant_expression','struct_declarator',2,'p_struct_declarator','parser.py',387),
  ('struct_declarator -> declarator : constant_expression','struct_declarator',3,'p_struct_declarator','parser.py',388),
  ('enum_specifier -> ENUM { enumerator_list }','enum_specifier',4,'p_enum_specifier','parser.py',395),
  ('enum_specifier -> ENUM IDENTIFIER { enumerator_list }','enum_specifier',5,'p_enum_specifier','parser.py',396),
  ('enum_specifier -> ENUM IDENTIFIER','enum_specifier',2,'p_enum_specifier','parser.py',397),
  ('enumerator_list -> enumerator','enumerator_list',1,'p_enumerator_list','parser.py',405),
  ('enumerator_list -> enumerator_list , enumerator','enumerator_list',3,'p_enumerator_list','parser.py',406),
  ('enumerator -> IDENTIFIER','enumerator',1,'p_enumerator','parser.py',413),
  ('enumerator -> IDENTIFIER = constant_expression','enumerator',3,'p_enumerator','parser.py',414),
  ('type_qualifier -> CONST','type_qualifier',1,'p_type_qualifier','parser.py',421),
  ('type_qualifier -> VOLATILE','type_qualifier',1,'p_type_qualifier','parser.py',422),
  ('declarator -> pointer direct_declarator','declarator',2,'p_declarator','parser.py',428),
  ('declarator -> direct_declarator','declarator',1,'p_declarator','parser.py',429),
  ('direct_declarator -> IDENTIFIER','direct_declarator',1,'p_direct_declarator','parser.py',436),
  ('direct_declarator -> ( declarator )','direct_declarator',3,'p_direct_declarator','parser.py',437),
  ('direct_declarator -> direct_declarator [ constant_expression ]','direct_declarator',4,'p_direct_declarator','parser.py',438),
  ('direct_declarator -> direct_declarator [ ]','direct_declarator',3,'p_direct_declarator','parser.py',439),
  ('direct_declarator -> direct_declarator ( parameter_type_list )','direct_declarator',4,'p_direct_declarator','parser.py',440),
  ('direct_declarator -> direct_declarator ( identifier_list )','direct_declarator',4,'p_direct_declarator','parser.py',441),
  ('direct_declarator -> direct_declarator ( )','direct_declarator',3,'p_direct_declarator','parser.py',442),
  ('pointer -> *','pointer',1,'p_pointer','parser.py',451),
  ('pointer -> * type_qualifier_list','pointer',2,'p_pointer','parser.py',452),
  ('pointer -> * pointer','pointer',2,'p_pointer','parser.py',453),
  ('pointer -> * type_qualifier_list pointer','pointer',3,'p_pointer','parser.py',454),
  ('type_qualifier_list -> type_qualifier','type_qualifier_list',1,'p_type_qualifier_list','parser.py',461),
  ('type_qualifier_list -> type_qualifier_list type_qualifier','type_qualifier_list',2,'p_type_qualifier_list','parser.py',462),
  ('parameter_type_list -> parameter_list','parameter_type_list',1,'p_parameter_type_list','parser.py',469),
  ('parameter_type_list -> parameter_list , ELLIPSIS','parameter_type_list',3,'p_parameter_type_list','parser.py',470),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','parser.py',477),
  ('parameter_list -> parameter_list , parameter_declaration','parameter_list',3,'p_parameter_list','parser.py',478),
  ('parameter_declaration -> declaration_specifiers declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',485),
  ('parameter_declaration -> declaration_specifiers abstract_declarator','parameter_declaration',2,'p_parameter_declaration','parser.py',486),
  ('parameter_declaration -> declaration_specifiers','parameter_declaration',1,'p_parameter_declaration','parser.py',487),
  ('identifier_list -> IDENTIFIER','identifier_list',1,'p_identifier_list','parser.py',494),
  ('identifier_list -> identifier_list , IDENTIFIER','identifier_list',3,'p_identifier_list','parser.py',495),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name','parser.py',502),
  ('type_name -> specifier_qualifier_list abstract_declarator','type_name',2,'p_type_name','parser.py',503),
  ('abstract_declarator -> pointer','abstract_declarator',1,'p_abstract_declarator','parser.py',510),
  ('abstract_declarator -> direct_abstract_declarator','abstract_declarator',1,'p_abstract_declarator','parser.py',511),
  ('abstract_declarator -> pointer direct_abstract_declarator','abstract_declarator',2,'p_abstract_declarator','parser.py',512),
  ('direct_abstract_declarator -> ( abstract_declarator )','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',519),
  ('direct_abstract_declarator -> [ ]','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',520),
  ('direct_abstract_declarator -> [ constant_expression ]','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',521),
  ('direct_abstract_declarator -> direct_abstract_declarator [ ]','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',522),
  ('direct_abstract_declarator -> direct_abstract_declarator [ constant_expression ]','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',523),
  ('direct_abstract_declarator -> ( )','direct_abstract_declarator',2,'p_direct_abstract_declarator','parser.py',524),
  ('direct_abstract_declarator -> ( parameter_type_list )','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',525),
  ('direct_abstract_declarator -> direct_abstract_declarator ( )','direct_abstract_declarator',3,'p_direct_abstract_declarator','parser.py',526),
  ('direct_abstract_declarator -> direct_abstract_declarator ( parameter_type_list )','direct_abstract_declarator',4,'p_direct_abstract_declarator','parser.py',527),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','parser.py',535),
  ('initializer -> { initializer_list }','initializer',3,'p_initializer','parser.py',536),
  ('initializer -> { initializer_list , }','initializer',4,'p_initializer','parser.py',537),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','parser.py',545),
  ('initializer_list -> initializer_list , initializer','initializer_list',3,'p_initializer_list','parser.py',546),
  ('statement -> labeled_statement','statement',1,'p_statement','parser.py',553),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',554),
  ('statement -> expression_statement','statement',1,'p_statement','parser.py',555),
  ('statement -> selection_statement','statement',1,'p_statement','parser.py',556),
  ('statement -> iteration_statement','statement',1,'p_statement','parser.py',557),
  ('statement -> jump_statement','statement',1,'p_statement','parser.py',558),
  ('labeled_statement -> IDENTIFIER : statement','labeled_statement',3,'p_labeled_statement','parser.py',564),
  ('labeled_statement -> CASE constant_expression : statement','labeled_statement',4,'p_labeled_statement','parser.py',565),
  ('labeled_statement -> DEFAULT : statement','labeled_statement',3,'p_labeled_statement','parser.py',566),
  ('compound_statement -> { }','compound_statement',2,'p_compound_statement','parser.py',573),
  ('compound_statement -> { statement_list }','compound_statement',3,'p_compound_statement','parser.py',574),
  ('compound_statement -> { declaration_list }','compound_statement',3,'p_compound_statement','parser.py',575),
  ('compound_statement -> { declaration_list statement_list }','compound_statement',4,'p_compound_statement','parser.py',576),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','parser.py',584),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','parser.py',585),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',592),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',593),
  ('expression_statement -> ;','expression_statement',1,'p_expression_statement','parser.py',600),
  ('expression_statement -> expression ;','expression_statement',2,'p_expression_statement','parser.py',601),
  ('selection_statement -> IF ( expression ) statement','selection_statement',5,'p_selection_statement','parser.py',608),
  ('selection_statement -> IF ( expression ) statement ELSE statement','selection_statement',7,'p_selection_statement','parser.py',609),
  ('selection_statement -> SWITCH ( expression ) statement','selection_statement',5,'p_selection_statement','parser.py',610),
  ('iteration_statement -> WHILE ( expression ) statement','iteration_statement',5,'p_iteration_statement','parser.py',617),
  ('iteration_statement -> DO statement WHILE ( expression ) ;','iteration_statement',7,'p_iteration_statement','parser.py',618),
  ('iteration_statement -> FOR ( expression_statement expression_statement ) statement','iteration_statement',6,'p_iteration_statement','parser.py',619),
  ('iteration_statement -> FOR ( expression_statement expression_statement expression ) statement','iteration_statement',7,'p_iteration_statement','parser.py',620),
  ('jump_statement -> GOTO IDENTIFIER ;','jump_statement',3,'p_jump_statement','parser.py',628),
  ('jump_statement -> CONTINUE ;','jump_statement',2,'p_jump_statement','parser.py',629),
  ('jump_statement -> BREAK ;','jump_statement',2,'p_jump_statement','parser.py',630),
  ('jump_statement -> RETURN ;','jump_statement',2,'p_jump_statement','parser.py',631),
  ('jump_statement -> RETURN expression ;','jump_statement',3,'p_jump_statement','parser.py',632),
  ('external_declaration -> function_definition','external_declaration',1,'p_external_declaration','parser.py',645),
  ('external_declaration -> declaration','external_declaration',1,'p_external_declaration','parser.py',646),
  ('function_definition -> declaration_specifiers declarator declaration_list compound_statement','function_definition',4,'p_function_definition','parser.py',653),
  ('function_definition -> declaration_specifiers declarator compound_statement','function_definition',3,'p_function_definition','parser.py',654),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition','parser.py',655),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition','parser.py',656),
]
